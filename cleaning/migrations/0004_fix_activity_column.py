# Generated by Copilot to fix missing activity_id column when migration 0003 was faked
from django.db import migrations, models, connection
import django.db.models.deletion


def add_activity_column_if_missing(apps, schema_editor):
    table = 'cleaning_cleaningrecord'
    with connection.cursor() as cursor:
        try:
            columns = [col.name for col in connection.introspection.get_table_description(cursor, table)]
        except Exception:
            # Table does not exist; nothing to do here
            return
    if 'activity_id' not in columns:
        CleaningRecord = apps.get_model('cleaning', 'CleaningRecord')
        CleaningActivity = apps.get_model('cleaning', 'CleaningActivity')
        field = models.ForeignKey(
            CleaningActivity,
            on_delete=django.db.models.deletion.SET_NULL,
            null=True,
            blank=True,
            related_name='cleaning_records',
        )
        field.set_attributes_from_name('activity')
        schema_editor.add_field(CleaningRecord, field)


def noop_reverse(apps, schema_editor):
    # No-op reverse; we won't drop the column to avoid data loss and SQLite limitations
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('cleaning', '0003_cleaningactivity_cleaningrecord_activity'),
    ]

    operations = [
        migrations.RunPython(add_activity_column_if_missing, noop_reverse),
    ]
